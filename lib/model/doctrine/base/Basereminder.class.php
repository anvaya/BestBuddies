<?php

/**
 * Basereminder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $member_id
 * @property integer $submission_form_id
 * @property timestamp $start_date
 * @property integer $alert_type
 * @property boolean $show_onscreen
 * @property boolean $send_email
 * @property boolean $displayed
 * @property boolean $emailed
 * @property varchar $alert_title
 * @property text $alert_content
 * @property integer $record_id
 * @property submission_form $submission_form
 * 
 * @method integer         getId()                 Returns the current record's "id" value
 * @method integer         getMemberId()           Returns the current record's "member_id" value
 * @method integer         getSubmissionFormId()   Returns the current record's "submission_form_id" value
 * @method timestamp       getStartDate()          Returns the current record's "start_date" value
 * @method integer         getAlertType()          Returns the current record's "alert_type" value
 * @method boolean         getShowOnscreen()       Returns the current record's "show_onscreen" value
 * @method boolean         getSendEmail()          Returns the current record's "send_email" value
 * @method boolean         getDisplayed()          Returns the current record's "displayed" value
 * @method boolean         getEmailed()            Returns the current record's "emailed" value
 * @method varchar         getAlertTitle()         Returns the current record's "alert_title" value
 * @method text            getAlertContent()       Returns the current record's "alert_content" value
 * @method integer         getRecordId()           Returns the current record's "record_id" value
 * @method submission_form getSubmissionForm()     Returns the current record's "submission_form" value
 * @method reminder        setId()                 Sets the current record's "id" value
 * @method reminder        setMemberId()           Sets the current record's "member_id" value
 * @method reminder        setSubmissionFormId()   Sets the current record's "submission_form_id" value
 * @method reminder        setStartDate()          Sets the current record's "start_date" value
 * @method reminder        setAlertType()          Sets the current record's "alert_type" value
 * @method reminder        setShowOnscreen()       Sets the current record's "show_onscreen" value
 * @method reminder        setSendEmail()          Sets the current record's "send_email" value
 * @method reminder        setDisplayed()          Sets the current record's "displayed" value
 * @method reminder        setEmailed()            Sets the current record's "emailed" value
 * @method reminder        setAlertTitle()         Sets the current record's "alert_title" value
 * @method reminder        setAlertContent()       Sets the current record's "alert_content" value
 * @method reminder        setRecordId()           Sets the current record's "record_id" value
 * @method reminder        setSubmissionForm()     Sets the current record's "submission_form" value
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basereminder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reminder');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('member_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('submission_form_id', 'integer', 4, array(
             'type' => 'integer',
             'size' => 4,
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('alert_type', 'integer', 1, array(
             'type' => 'integer',
             'size' => 1,
             'notnull' => false,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('show_onscreen', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('send_email', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('displayed', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('emailed', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('alert_title', 'varchar', 255, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('alert_content', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('record_id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'notnull' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('submission_form', array(
             'local' => 'submission_form_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}
<?php

/**
 * Basecalendar_event
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $member_id
 * @property integer $event_type_id
 * @property timestamp $from_date
 * @property timestamp $to_date
 * @property varchar $title
 * @property varchar $description
 * @property varchar $address
 * @property varchar $city
 * @property varchar $state
 * @property varchar $zip
 * @property varchar $contact_person
 * @property varchar $phone_number
 * @property varchar $email_address
 * @property varchar $website
 * @property integer $status
 * @property event_type $event_type
 * @property member $member
 * @property Doctrine_Collection $event_member
 * @property Doctrine_Collection $event_file
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getMemberId()       Returns the current record's "member_id" value
 * @method integer             getEventTypeId()    Returns the current record's "event_type_id" value
 * @method timestamp           getFromDate()       Returns the current record's "from_date" value
 * @method timestamp           getToDate()         Returns the current record's "to_date" value
 * @method varchar             getTitle()          Returns the current record's "title" value
 * @method varchar             getDescription()    Returns the current record's "description" value
 * @method varchar             getAddress()        Returns the current record's "address" value
 * @method varchar             getCity()           Returns the current record's "city" value
 * @method varchar             getState()          Returns the current record's "state" value
 * @method varchar             getZip()            Returns the current record's "zip" value
 * @method varchar             getContactPerson()  Returns the current record's "contact_person" value
 * @method varchar             getPhoneNumber()    Returns the current record's "phone_number" value
 * @method varchar             getEmailAddress()   Returns the current record's "email_address" value
 * @method varchar             getWebsite()        Returns the current record's "website" value
 * @method integer             getStatus()         Returns the current record's "status" value
 * @method event_type          getEventType()      Returns the current record's "event_type" value
 * @method member              getMember()         Returns the current record's "member" value
 * @method Doctrine_Collection getEventMember()    Returns the current record's "event_member" collection
 * @method Doctrine_Collection getEventFile()      Returns the current record's "event_file" collection
 * @method calendar_event      setId()             Sets the current record's "id" value
 * @method calendar_event      setMemberId()       Sets the current record's "member_id" value
 * @method calendar_event      setEventTypeId()    Sets the current record's "event_type_id" value
 * @method calendar_event      setFromDate()       Sets the current record's "from_date" value
 * @method calendar_event      setToDate()         Sets the current record's "to_date" value
 * @method calendar_event      setTitle()          Sets the current record's "title" value
 * @method calendar_event      setDescription()    Sets the current record's "description" value
 * @method calendar_event      setAddress()        Sets the current record's "address" value
 * @method calendar_event      setCity()           Sets the current record's "city" value
 * @method calendar_event      setState()          Sets the current record's "state" value
 * @method calendar_event      setZip()            Sets the current record's "zip" value
 * @method calendar_event      setContactPerson()  Sets the current record's "contact_person" value
 * @method calendar_event      setPhoneNumber()    Sets the current record's "phone_number" value
 * @method calendar_event      setEmailAddress()   Sets the current record's "email_address" value
 * @method calendar_event      setWebsite()        Sets the current record's "website" value
 * @method calendar_event      setStatus()         Sets the current record's "status" value
 * @method calendar_event      setEventType()      Sets the current record's "event_type" value
 * @method calendar_event      setMember()         Sets the current record's "member" value
 * @method calendar_event      setEventMember()    Sets the current record's "event_member" collection
 * @method calendar_event      setEventFile()      Sets the current record's "event_file" collection
 * 
 * @package    BestBuddies
 * @subpackage model
 * @author     Anvaya Technologies
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecalendar_event extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('calendar_event');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'size' => 8,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('member_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('event_type_id', 'integer', 4, array(
             'type' => 'integer',
             'size' => 4,
             'unsigned' => true,
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('from_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('to_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('title', 'varchar', 400, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 400,
             ));
        $this->hasColumn('description', 'varchar', 1000, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('address', 'varchar', 400, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 400,
             ));
        $this->hasColumn('city', 'varchar', 100, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('state', 'varchar', 50, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 50,
             ));
        $this->hasColumn('zip', 'varchar', 20, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('contact_person', 'varchar', 60, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 60,
             ));
        $this->hasColumn('phone_number', 'varchar', 60, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 60,
             ));
        $this->hasColumn('email_address', 'varchar', 100, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('website', 'varchar', 100, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'size' => 1,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('event_type', array(
             'local' => 'event_type_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('member', array(
             'local' => 'member_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('event_member', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $this->hasMany('event_file', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}